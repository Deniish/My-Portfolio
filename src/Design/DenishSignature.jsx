import React, { useEffect, useRef, useState } from "react";
import { gsap } from "gsap";

const DenishSignature = () => {
  const denishRef = useRef(null);
  const wrapRef = useRef(null);
  const targetRef = useRef(null);
   // ========== PATHS FOR EACH LETTER ==========
const pathsRef = useRef([]); // ✅ array of refs
const [isReady, setIsReady] = useState(false); // ✅ loader state

useEffect(() => {
  const paths = pathsRef.current;
  if (!paths || paths.length === 0) return;

  let offsetX = 0;

  paths.forEach((path, i) => {
    const length = path.getTotalLength();
    const bbox = path.getBBox();
    let letterWidth = bbox.width + 5;

    // Adjust spacing for smoother letters
    if (i === 0) letterWidth -= 10;
    if (i === 1) letterWidth -= 8;
    if (i === 2) letterWidth -= 6;
    if (i === 3) letterWidth -= 10;
    if (i === 4) letterWidth -= 8;
    if (i === 5) letterWidth -= -5;
    if (i === 6) letterWidth -= 15;
    if (i === 7) letterWidth -= 8;
    if (i === 8) letterWidth -= 6;
    if (i === 9) letterWidth -= 10;
    if (i === 10) letterWidth -= 8;

    // Initial styles for each letter
    gsap.set(path, {
      strokeDasharray: length,
      strokeDashoffset: length,
      stroke: "#000000", 
      strokeWidth: 2,
      fill: "none",
      opacity: 0,
      visibility: "hidden",
      x: offsetX
    });

    offsetX += letterWidth;
  });

  // ========= UNDERLINE INITIAL STATE =========
  const underline = document.querySelector("#signature-underline");
  if (underline) {
    const underlineLength = underline.getTotalLength();
    gsap.set(underline, {
      strokeDasharray: underlineLength,
      strokeDashoffset: underlineLength,
      opacity: 0
    });
  }

  // ✅ simulate loading (2 sec)
  const timer = setTimeout(() => setIsReady(true), 2000);
  return () => clearTimeout(timer);
}, []);

// ========= RUN ANIMATIONS AFTER LOADING =========
useEffect(() => {
  if (!isReady) return;

  const paths = pathsRef.current;

  paths.forEach((path, i) => {
    // ---------- OUTLINE ANIMATION ----------
    gsap.to(path, {
      strokeDashoffset: 0,
      duration: 0.6,
      opacity: 1,
      visibility: "visible",
      ease: "power1.inOut",
      delay: i * 0.3
    });

    // ---------- FILL ANIMATION ----------
    gsap.to(path, {
      fill: "white",
      duration: 0.6,
      ease: "power1.inOut",
      delay: i * 0.3 + 0.4
    });
  });

  // ========= UNDERLINE AFTER LETTERS =========
  const underline = document.querySelector("#signature-underline");
  if (underline) {
    gsap.to(underline, {
      strokeDashoffset: 0,
      opacity: 1,
      duration: 1.0,
      ease: "power2.inOut",
      delay: paths.length * 0.3 + 0.6
    });
  }
}, [isReady]);



 

  useEffect(() => {
    const path = denishRef.current;
    const wrap = wrapRef.current;
    const target = targetRef.current;



  
    

    // ========== BUTTERY SMOOTH 3D HOVER ==========
    let currentX = 0,
      currentY = 0;
    let targetX = 0,
      targetY = 0;

    function onMove(e) {
      const { left, top, width, height } = wrap.getBoundingClientRect();
      const offsetX = e.clientX - left;
      const offsetY = e.clientY - top;

      targetY = ((offsetX - width / 2) / width) * 20; // rotateY
      targetX = -((offsetY - height / 2) / height) * 20; // rotateX
    }

    function reset() {
      targetX = 0;
      targetY = 0;
    }

    function update() {
      // lerp towards target
      currentX += (targetX - currentX) * 0.08;
      currentY += (targetY - currentY) * 0.08;

      gsap.set(target, {
        rotationY: currentY,
        rotationX: currentX,
        transformPerspective: 900,
        scale: 1.05
      });

      requestAnimationFrame(update);
    }
    update();

    wrap.addEventListener("mousemove", onMove);
    // wrap.addEventListener("mouseleave", reset);

    return () => {
      wrap.removeEventListener("mousemove", onMove);
    //   wrap.removeEventListener("mouseleave", reset);
    };
  }, []);

  return (
    <div
      ref={wrapRef}
      className="signature-container relative z-10 flex flex-col items-center px-4"
      style={{
        perspective: "900px",
        transformStyle: "preserve-3d",
        overflow: "visible",
        willChange: "transform"
      }}
    >
      {!isReady && <div className="loader">Loading...</div>}
      <svg
        ref={targetRef}
        className="w-[100vw] max-w-[1200px] h-auto md:translate-x-10 sm:translate-x-0 block mx-auto overflow-visible"
        style={{
          visibility: isReady ? "visible" : "hidden", 
          opacity: isReady ? 1 : 0,
          transition: "opacity 0.3s ease"
        }}
        viewBox="0 0 300 120"
        xmlns="http://www.w3.org/2000/svg"
      >
          


    {/* letter by letter */}
     {/* D */}
    <path
    ref={el => (pathsRef.current[0] = el)}
    d="M4.42 24.66L3.91 24.58L3.81 24.58Q3.20 24.58 2.55 24.10Q1.90 23.61 1.90 22.36Q1.90 21.12 3.26 19.53Q4.61 17.94 6.93 16.61Q9.25 15.28 12.71 14.43Q16.16 13.57 20.00 13.57Q27.83 13.57 32.24 16.66Q36.65 19.75 36.65 24.68Q36.65 27.76 35.28 30.83Q33.91 33.91 31.62 36.51Q29.32 39.11 26.22 41.37Q23.12 43.63 19.73 45.21Q12.40 48.58 5.71 48.58Q2.42 48.58 1.56 48.05Q1.25 47.88 0.94 47.52Q0.63 47.17 0.46 47.05Q0 46.75 0 45.79Q0 44.82 0.20 44.04Q0.93 41.43 6.77 32.70Q12.62 23.97 16.55 18.63Q16.82 18.26 19.31 18.09Q20.34 18.09 20.73 18.24Q21.12 18.38 21.12 18.76Q21.12 19.14 19.85 20.91Q18.58 22.68 11.69 33.29Q4.81 43.90 4.81 44.19Q4.81 44.48 6.97 44.48Q9.13 44.48 12.29 43.57Q15.45 42.65 18.24 41.16Q21.02 39.67 23.56 37.71Q26.10 35.74 27.91 33.69Q31.86 29.20 31.86 25.71Q31.86 22.22 28.67 19.78Q25.49 17.33 19.95 17.33Q16.21 17.33 12.89 18.58Q9.57 19.82 8.33 20.80Q7.08 21.78 7.08 22.12Q7.08 22.31 7.37 22.31L8.42 22.12Q8.64 22.12 8.64 22.22Q8.64 22.31 8.23 22.56Q7.81 22.80 7.56 23.08Q7.30 23.36 6.27 23.99Q5.25 24.61 4.42 24.66Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* e */}
  <path
    ref={el => (pathsRef.current[1] = el)}
    d="M17.92 30.32Q17.92 31.93 16.61 33.15Q15.31 34.38 13.65 34.38Q13.11 34.38 12.94 34.12Q12.77 33.86 12.77 33.45Q12.77 33.03 12.87 32.64Q11.99 32.93 10.91 33.54Q9.84 34.16 8.28 35.35Q6.71 36.55 6.71 37.13Q6.71 37.33 7.29 37.33Q7.86 37.33 9.06 36.93Q10.25 36.52 10.73 36.52Q11.21 36.52 11.35 36.57Q11.67 36.74 12.04 37.32Q12.40 37.89 12.40 38.22Q12.40 38.55 11.77 39.09Q11.13 39.62 10.33 39.90Q9.52 40.19 9.25 40.33Q4.10 43.21 4.10 44.29Q4.10 46.19 7.35 46.19Q9.42 46.19 11.52 44.87Q13.31 43.75 14.73 42.59Q16.16 41.43 16.54 41.16Q16.92 40.89 17.11 40.89Q17.75 40.89 17.75 42.31Q17.75 43.73 17.58 44.18Q17.41 44.63 16.60 45.29Q11.38 49.54 6.71 49.54Q4.22 49.54 2.73 48.85Q0 47.61 0 45.04Q0 41.67 4.66 39.94Q3.74 39.53 3.47 38.88Q3.20 38.23 3.20 36.80Q3.20 35.38 4.53 33.78Q5.86 32.18 7.79 31.15Q12.08 28.83 15.45 28.83Q16.26 28.83 17.09 29.22Q17.92 29.61 17.92 30.32Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* n */}
  <path
    ref={el => (pathsRef.current[2] = el)}
    d="M15.87 44.82Q15.87 45.90 17.33 45.90Q18.12 45.90 19.30 45.12Q20.48 44.34 21.44 43.41Q23.97 40.89 24.32 40.89Q24.95 40.89 24.95 42.72Q24.95 44.56 23.80 45.24Q20.31 48.39 18.41 49.07Q17.33 49.44 16.04 49.41Q14.75 49.39 13.48 48.29Q12.21 47.19 12.21 45.62Q12.21 44.04 13.04 42.04Q13.87 40.04 14.73 38.61Q15.60 37.18 16.87 35.29Q18.14 33.40 18.21 32.93L18.16 32.89Q17.36 32.96 14.17 36.06Q10.99 39.16 8.91 41.46Q6.84 43.75 3.96 47.58Q3.15 48.63 2.64 48.63Q2.12 48.63 1.26 48.30Q0.39 47.97 0.20 47.83Q0 47.68 0 47.39Q0 47.09 0.17 46.67Q0.34 46.24 0.50 45.96Q0.66 45.68 1.03 45.09Q1.39 44.51 2.48 42.61Q3.56 40.72 5.81 36.96Q8.06 33.20 8.50 32.42Q9.42 30.81 10.01 30.08Q11.11 28.69 13.72 28.69Q14.31 28.69 14.31 29.42Q14.31 30.57 12.18 33.74L11.16 35.28Q15.38 30.59 18.29 29.35Q19.70 28.74 20.84 28.74Q21.97 28.74 22.64 29.35Q23.32 29.96 23.32 30.70Q23.32 31.45 22.80 32.48Q22.29 33.52 21.77 34.34Q21.24 35.16 20.39 36.40Q19.53 37.65 19.46 37.76Q19.38 37.87 19.08 38.34Q18.77 38.82 18.63 39.04Q18.48 39.26 18.14 39.81Q17.80 40.36 17.59 40.72Q17.38 41.09 17.08 41.63Q16.77 42.16 16.59 42.55Q16.41 42.94 16.21 43.41Q15.87 44.26 15.87 44.82Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />
   {/* i */}
   <path
    ref={el => (pathsRef.current[3] = el)}
    d="M17.16 21.78Q17.16 23.17 15.87 24.57Q14.58 25.98 13.17 25.98Q11.77 25.98 11.77 24.51Q11.77 23.05 13.00 21.72Q14.23 20.39 15.72 20.39Q16.38 20.39 16.77 20.75Q17.16 21.12 17.16 21.78M13.21 43.09Q13.21 43.82 13.06 44.14Q11.87 46.58 9.25 48.08Q6.64 49.58 4.71 49.58Q2.78 49.58 1.39 48.29Q0 47.00 0 45.65Q0 44.31 1.34 41.75Q2.69 39.18 4.03 37.01Q5.37 34.84 5.37 34.66Q5.37 34.47 4.87 33.94Q4.37 33.40 4.37 33.14Q4.37 32.89 5.38 31.80Q6.40 30.71 7.85 29.65Q9.30 28.59 10.07 28.59Q10.84 28.59 11.45 29.27Q12.06 29.96 12.06 30.52Q12.06 31.08 6.25 41.09Q6.18 41.24 5.85 41.74Q5.52 42.24 5.33 42.57Q5.15 42.90 4.91 43.36Q4.42 44.34 4.42 45.00Q4.42 45.83 5.54 45.83Q6.67 45.83 7.87 45.06Q9.08 44.29 9.96 43.36Q12.26 40.89 12.57 40.89Q13.21 40.89 13.21 43.09Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* s */}
  <path
    ref={el => (pathsRef.current[4] = el)}
    d="M3.20 43.70L3.17 44.09Q3.17 44.70 3.64 45.14Q4.10 45.58 4.49 45.58Q7.42 45.58 9.68 44.70Q11.94 43.82 11.94 42.94Q11.94 42.53 11.12 42.22Q10.30 41.92 8.36 41.47Q6.42 41.02 5.54 40.76Q4.66 40.50 4.15 40.28Q3.64 40.06 3.10 39.67Q1.95 38.87 1.95 37.27Q1.95 35.67 3.14 34.09Q4.32 32.52 6.10 31.40Q7.89 30.27 9.94 29.42Q13.99 27.73 16.75 27.73Q19.46 27.73 20.09 28.91Q20.29 29.32 20.29 29.83L20.29 30.00Q20.29 31.30 19.74 32.03Q19.19 32.76 18.01 33.35Q16.82 33.94 16.13 33.94Q15.43 33.94 15.25 33.84Q15.06 33.74 14.94 33.58Q14.82 33.42 14.64 33.35Q14.45 33.28 14.45 32.98Q14.45 32.69 14.70 32.39Q14.94 32.08 15.04 31.74Q13.43 31.81 11.67 32.48Q9.91 33.15 8.65 33.98Q7.40 34.81 6.57 35.57Q5.74 36.33 5.74 36.68Q5.74 37.04 6.86 37.26Q11.91 38.26 13.50 38.99Q15.09 39.72 15.70 40.65Q16.31 41.58 16.31 42.33Q16.31 43.90 15.06 45.29Q13.82 46.68 11.99 47.56Q8.06 49.49 5.14 49.49Q2.22 49.49 1.11 48.60Q0 47.71 0 46.48Q0 45.26 0.62 44.23Q1.25 43.19 2.22 43.19Q3.20 43.19 3.20 43.70Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* h */}
  <path
    ref={el => (pathsRef.current[5] = el)}
    d="M24.24 41.38Q24.41 42.50 24.41 43.15Q24.41 43.80 24.18 44.27Q23.95 44.75 23.16 45.62Q22.36 46.48 21.26 47.36Q18.58 49.49 15.77 49.49Q11.74 49.49 11.74 45.92Q11.74 42.82 17.14 33.57Q17.33 33.23 17.41 33.08Q15.53 34.40 10.22 40.27Q4.91 46.14 3.15 48.58Q3.00 48.80 2.42 49.07Q1.83 49.34 1.50 49.34Q1.17 49.34 0.79 49.13Q0.42 48.93 0.32 48.93Q0 48.93 0 48.72Q0 48.51 0.87 46.47Q1.73 44.43 3.15 41.41Q7.03 33.06 14.70 19.68Q17.38 14.99 18.90 13.04Q19.97 11.65 22.51 11.65Q23.05 11.65 23.12 11.96Q23.19 12.28 23.19 12.65Q23.19 13.01 23.05 13.38L20.43 17.46Q12.67 29.57 8.74 37.52Q12.55 32.89 16.14 30.37Q18.36 28.78 19.47 28.78Q20.58 28.78 21.48 29.14Q22.39 29.49 22.39 30.83Q22.39 31.32 20.80 34.45Q16.04 43.82 16.04 44.86Q16.04 45.90 16.89 45.90Q18.14 45.90 20.73 43.48Q22.68 41.65 23.19 41.14Q23.49 40.92 23.73 40.92Q24.19 40.92 24.24 41.38Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

   {/* S */}
    <path
    ref={el => (pathsRef.current[6] = el)}
    d="M3.22 41.87L2.91 42.53Q2.91 43.24 4.90 43.88Q6.88 44.53 9.27 44.53Q11.65 44.53 14.50 43.82Q17.36 43.12 19.47 42.09Q21.58 41.06 22.96 39.94Q24.34 38.82 24.34 37.99Q24.34 36.94 21.90 36.04Q19.46 35.13 14.81 34.05Q10.16 32.96 8.00 31.30Q5.83 29.64 5.83 27.26Q5.83 24.88 7.54 22.71Q9.25 20.53 12.00 18.85Q14.75 17.16 17.99 15.84Q24.71 13.13 30.44 13.13Q32.64 13.13 34.33 13.53Q37.55 14.28 37.55 15.53Q37.55 16.77 37.33 17.22Q37.11 17.68 36.98 17.82Q36.84 17.97 36.63 18.12Q36.43 18.26 36.33 18.33Q35.25 19.24 30.44 19.46Q28.78 19.53 28.64 19.63Q28.49 19.73 28.38 19.73Q28.27 19.73 28.13 19.53Q27.98 19.34 27.98 18.90Q27.98 18.46 28.93 17.29Q25.95 17.46 22.57 18.65Q19.19 19.85 16.70 21.35Q14.21 22.85 12.55 24.30Q10.89 25.76 10.89 26.35Q10.89 26.95 11.25 27.34Q12.28 28.44 16.94 29.64Q21.78 30.88 23.39 31.64Q25 32.40 26.06 33.08Q27.12 33.76 27.76 34.47Q29.25 36.18 29.25 37.94Q29.25 39.70 28.31 41.24Q27.37 42.77 25.48 44.21Q23.58 45.65 21.02 46.78Q15.41 49.29 7.64 49.29Q1.98 49.29 0.42 46.29Q0 45.53 0 44.71Q0 43.90 0.38 43.24Q0.76 42.58 1.29 42.24Q2.34 41.58 2.78 41.58Q3.22 41.58 3.22 41.87Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* h */}
  <path
    ref={el => (pathsRef.current[7] = el)}
    d="M24.24 41.38Q24.41 42.50 24.41 43.15Q24.41 43.80 24.18 44.27Q23.95 44.75 23.16 45.62Q22.36 46.48 21.26 47.36Q18.58 49.49 15.77 49.49Q11.74 49.49 11.74 45.92Q11.74 42.82 17.14 33.57Q17.33 33.23 17.41 33.08Q15.53 34.40 10.22 40.27Q4.91 46.14 3.15 48.58Q3.00 48.80 2.42 49.07Q1.83 49.34 1.50 49.34Q1.17 49.34 0.79 49.13Q0.42 48.93 0.32 48.93Q0 48.93 0 48.72Q0 48.51 0.87 46.47Q1.73 44.43 3.15 41.41Q7.03 33.06 14.70 19.68Q17.38 14.99 18.90 13.04Q19.97 11.65 22.51 11.65Q23.05 11.65 23.12 11.96Q23.19 12.28 23.19 12.65Q23.19 13.01 23.05 13.38L20.43 17.46Q12.67 29.57 8.74 37.52Q12.55 32.89 16.14 30.37Q18.36 28.78 19.47 28.78Q20.58 28.78 21.48 29.14Q22.39 29.49 22.39 30.83Q22.39 31.32 20.80 34.45Q16.04 43.82 16.04 44.86Q16.04 45.90 16.89 45.90Q18.14 45.90 20.73 43.48Q22.68 41.65 23.19 41.14Q23.49 40.92 23.73 40.92Q24.19 40.92 24.24 41.38Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* a */}
  <path
    ref={el => (pathsRef.current[8] = el)}
    d="M20.00 30.03Q21.85 30.03 21.85 31.30Q21.85 31.98 21.53 32.30Q21.22 32.62 20.18 34.41Q19.14 36.21 17.88 39.00Q16.63 41.80 16.26 43.77Q16.19 44.02 16.19 44.46Q16.19 45.80 16.92 45.80Q17.65 45.80 18.65 45.10Q19.65 44.41 20.43 43.62Q21.22 42.82 21.96 41.99Q22.71 41.16 22.85 41.04Q23.00 40.92 23.29 40.92Q23.75 40.92 23.85 41.63Q23.95 42.33 23.95 43.09Q23.95 43.85 23.80 44.14Q23.10 45.53 20.69 47.49Q18.29 49.44 16.32 49.44Q14.36 49.44 13.43 48.24Q12.50 47.05 12.50 45.59Q12.50 44.14 12.99 43.04Q10.96 45.68 8.34 47.51Q5.71 49.34 4.05 49.34Q2.39 49.34 1.34 48.34Q0 47.09 0 44.89Q0 42.68 0.99 40.44Q1.98 38.21 3.59 36.36Q5.20 34.52 7.13 33.01Q11.18 29.83 14.60 29.83Q15.92 29.83 16.75 30.27Q17.58 30.71 17.80 31.37Q18.38 30.49 18.79 30.26Q19.19 30.03 20.00 30.03M16.75 32.74Q12.57 32.74 8.11 37.38Q6.52 39.04 5.19 41.36Q3.86 43.68 3.86 44.53Q3.86 45.39 4.35 45.39Q5.03 45.39 8.15 42.69Q11.28 39.99 12.30 38.72Q13.43 37.30 16.75 32.74Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />
   {/* r */}
   <path
    ref={el => (pathsRef.current[9] = el)}
    d="M11.16 35.28Q16.92 28.74 20.97 28.74Q21.97 28.74 22.62 29.33Q23.27 29.93 23.27 30.88Q23.27 31.84 21.91 34.07Q20.56 36.30 19.41 37.84Q18.80 38.62 18.03 38.62Q17.26 38.62 16.83 38.06Q16.41 37.50 16.41 36.74Q16.41 35.06 18.21 32.93L18.16 32.89Q17.36 32.96 14.17 36.06Q10.99 39.16 8.75 41.61Q6.52 44.07 3.91 47.58Q3.15 48.63 2.62 48.63Q2.10 48.63 1.23 48.30Q0.37 47.97 0.18 47.83Q0 47.68 0 47.34Q0 47.00 0.20 46.55Q0.39 46.09 0.92 45.26Q1.44 44.43 2.50 42.58Q3.56 40.72 5.81 36.96Q8.06 33.20 8.50 32.42Q9.42 30.81 10.01 30.08Q11.11 28.69 13.72 28.69Q14.31 28.69 14.31 29.42Q14.31 30.57 12.18 33.74L11.16 35.28Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* m */}
  <path
    ref={el => (pathsRef.current[10] = el)}
    d="M2.73 48.73L1.54 48.68L1.10 48.68Q0.85 48.61 0.57 48.39Q0.29 48.17 0.15 48.07Q0 47.97 0 47.72Q0 47.46 0.20 46.83Q4.96 36.35 9.40 30.08Q9.89 29.39 10.97 29.04Q12.06 28.69 13.09 28.69Q13.70 28.69 13.70 29.64Q13.70 29.91 13.50 30.36Q13.31 30.81 12.52 31.84Q11.74 32.86 10.67 34.18Q9.59 35.50 9.45 35.69Q12.79 32.23 15.49 30.53Q18.19 28.83 19.40 28.83Q20.61 28.83 21.25 29.53Q21.90 30.22 21.90 31.02Q21.90 31.81 21.79 32.34Q21.68 32.86 21.39 33.44Q21.09 34.01 20.89 34.41Q20.68 34.81 20.19 35.46Q19.70 36.11 19.52 36.35Q19.34 36.60 18.76 37.28Q18.19 37.96 18.14 38.04Q18.82 37.35 20.04 36.01Q21.26 34.67 22.11 33.76Q22.95 32.86 24.22 31.73Q25.49 30.59 26.59 29.88Q29.22 28.22 31.93 28.22Q32.86 28.22 33.50 28.81Q34.13 29.39 34.13 30.21Q34.13 31.03 32.15 34.12Q30.18 37.21 28.21 40.32Q26.25 43.43 26.25 44.24Q26.25 45.36 26.66 45.57Q27.08 45.78 27.66 45.73Q28.25 45.68 29.31 44.97Q30.37 44.26 31.20 43.51Q32.54 42.29 33.69 41.14Q33.94 40.92 34.23 40.92Q34.69 40.92 34.79 41.63Q34.89 42.33 34.89 43.09Q34.89 43.85 34.74 44.14Q34.03 45.51 31.62 47.49Q29.20 49.46 26.98 49.46Q26.71 49.46 26.59 49.44Q24.07 49.19 23.11 48.06Q22.14 46.92 22.14 45.36Q22.14 43.80 23.21 41.58Q24.27 39.36 25.54 37.55Q26.81 35.74 27.87 34.29Q28.93 32.84 28.93 32.71Q28.93 32.59 28.74 32.59Q27.98 32.59 25.37 35.03Q20.90 39.21 17.65 43.09Q16.80 44.12 13.60 48.29Q13.23 48.78 12.44 48.78Q11.65 48.78 10.79 48.47Q9.94 48.17 9.94 47.68Q9.94 47.44 13.82 40.83Q17.70 34.23 17.70 33.63Q17.70 33.03 16.98 33.03Q16.26 33.03 14.01 35.18Q7.84 41.09 4.44 46.92Q4.22 47.27 3.59 48.00Q2.95 48.73 2.73 48.73Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />

  {/* a */}
  <path
    ref={el => (pathsRef.current[11] = el)}
    d="M20.00 30.03Q21.85 30.03 21.85 31.30Q21.85 31.98 21.53 32.30Q21.22 32.62 20.18 34.41Q19.14 36.21 17.88 39.00Q16.63 41.80 16.26 43.77Q16.19 44.02 16.19 44.46Q16.19 45.80 16.92 45.80Q17.65 45.80 18.65 45.10Q19.65 44.41 20.43 43.62Q21.22 42.82 21.96 41.99Q22.71 41.16 22.85 41.04Q23.00 40.92 23.29 40.92Q23.75 40.92 23.85 41.63Q23.95 42.33 23.95 43.09Q23.95 43.85 23.80 44.14Q23.10 45.53 20.69 47.49Q18.29 49.44 16.32 49.44Q14.36 49.44 13.43 48.24Q12.50 47.05 12.50 45.59Q12.50 44.14 12.99 43.04Q10.96 45.68 8.34 47.51Q5.71 49.34 4.05 49.34Q2.39 49.34 1.34 48.34Q0 47.09 0 44.89Q0 42.68 0.99 40.44Q1.98 38.21 3.59 36.36Q5.20 34.52 7.13 33.01Q11.18 29.83 14.60 29.83Q15.92 29.83 16.75 30.27Q17.58 30.71 17.80 31.37Q18.38 30.49 18.79 30.26Q19.19 30.03 20.00 30.03M16.75 32.74Q12.57 32.74 8.11 37.38Q6.52 39.04 5.19 41.36Q3.86 43.68 3.86 44.53Q3.86 45.39 4.35 45.39Q5.03 45.39 8.15 42.69Q11.28 39.99 12.30 38.72Q13.43 37.30 16.75 32.74Z"
    stroke="white"
    fill="none"
    strokeWidth="1"
    strokeLinecap="round"
    strokeLinejoin="round"
  />


      {/* Underline path */}
<defs>
  <linearGradient id="underlineGradient" x1="0%" y1="0%" x2="100%" y2="0%">
    
    <stop offset="0%" stopColor="#E6E6E6" stopOpacity="1" />
    <stop offset="70%" stopColor="#C0C0C0" stopOpacity="0.8" />
    
    <stop offset="100%" stopColor="#B0B0B0" stopOpacity="0" />
  </linearGradient>
</defs>

<path
  id="signature-underline"
  d="M10 75 C 60 60, 220 60, 290 70"
  stroke="url(#underlineGradient)"
  strokeWidth="4"
  fill="none"
  strokeLinecap="round"
  opacity="0"
/>








    
      </svg>
    </div>
  );
};

export default DenishSignature;
